name: CPUID MVP Pipeline

# Trigger the workflow manually
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to run the automation on'
        required: false
        default: 'main'

      old_version:
        description: 'Old cam-core version (e.g., 69.0.0)'
        required: true
        default: '69.0.0'
      new_version:
        description: 'New cam-core version (e.g., 69.1.0)'
        required: true
        default: '69.1.0'

jobs:
  installation:
    runs-on: [self-hosted, windows]  # Specify a self-hosted Windows runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Check out the repository to the runner

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_READ_TOKEN}}

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          always-auth: true
          registry-url: https://registry.npmjs.org
          scope: "@nzxt"
      
      - name: Echo pnpm list and version
        run: |
          echo 'pnpm list'
          pnpm list
          echo 'pnpm install'
          pnpm install
          echo "pnpm install @nzxt/cam-core@${{ github.event.inputs.old_version }}"
          pnpm install @nzxt/cam-core@${{ github.event.inputs.old_version }}
        shell: powershell
      
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            pnpm-store-${{ github.ref }}-
            pnpm-store-

  cpu-data-prep:
    runs-on: [self-hosted, windows]  # Use the same self-hosted runner
    needs: installation  # Ensure this runs after the installation job
    steps:
      - name: Check branch
        run: |
          git branch
        shell: powershell

      - name: Restore pnpm cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            pnpm-store-${{ github.ref }}-
            pnpm-store-
  
      - name: Check pnpm env
        run: |
          echo 'pnpm list'
          pnpm list
          echo 'get cam-core version'
          pnpm list @nzxt/cam-core
        shell: powershell

      - name: Get average temperature for old cam-core version
        run: |
          ts-node ./cpuid_helpers/get_cpu_avg_temp.ts
          echo "Print out ./cpuid_reading.json"
          (Get-Content -Path "./cpuid_reading.json" | ConvertFrom-Json) | Format-List
        shell: powershell

      - name: Install new cam-core version
        run: |
          echo "pnpm install @nzxt/cam-core@${{ github.event.inputs.new_version }}"
          pnpm install @nzxt/cam-core@${{ github.event.inputs.new_version }}
        shell: powershell

      - name: Get current temperature for cam-core@69.1.0
        run: |
          ts-node ./cpuid_helpers/get_cpu_avg_temp.ts
          echo "Print out ./cpuid_reading.json"
          (Get-Content -Path "./cpuid_reading.json" | ConvertFrom-Json) | Format-List
        shell: powershell
      

  validation:
    runs-on: [self-hosted, windows]  # Use the same self-hosted runner
    needs: cpu-data-prep  # Ensure this runs after CPU data prep
    steps:

      - name: Restore pnpm cache
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-store-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            pnpm-store-${{ github.ref }}-
            pnpm-store-

      - name: Cross-validate CPUID values
        run: |
          echo 'git branch'
          git branch
          echo 'pnpm list'
          pnpm list
          pnpm test-cpuid
        shell: powershell